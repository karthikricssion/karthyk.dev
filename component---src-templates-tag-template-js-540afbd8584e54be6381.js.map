{"version":3,"sources":["webpack:///./src/components/banner/index.js","webpack:///./src/components/shared/style.js","webpack:///./src/components/writings/SinglewritingList.js","webpack:///./src/templates/tagTemplate.js"],"names":["BannerHead","styled","h1","media","phone","tablet","BannerHeadTwo","h2","BannerText","props","className","pageHeading","pageInformation","styles","WritingListStyle","article","shardedStyle","writingList","WritingListTitle","WritingListDatePosted","aside","writingListDatePosted","WritingListOverview","p","writingListOverview","WritingList","writings","map","index","frontmatter","timeToRead","excerpt","key","to","slug","title","date","pageContext","tag","data","allMarkdownRemark","nodes","query"],"mappings":"8iBAIA,IAAMA,EAAaC,IAAOC,GAAV,qEAAGD,CAAH,8HAWVE,IAAMC,MAXI,KAeVD,IAAME,OAfI,MAoBVC,EAAgBL,IAAOM,GAAV,wEAAGN,CAAH,kGAObE,IAAMC,MAPO,KAWbD,IAAME,OAXO,MAuBJG,IAPI,SAACC,GAAD,OACf,6BAASC,UAAU,aACf,kBAACV,EAAD,KAAcS,EAAME,aACpB,kBAACL,EAAD,KAAiBG,EAAMG,oB,oCCRhBC,IAnCA,CACX,YAAe,CACX,gBAAiB,OACjB,cAAe,MACf,aAAc,OACd,EAAK,CACD,kBAAmB,OACnB,eAAgB,iBAIxB,iBAAoB,CAChB,OAAU,EACV,YAAa,OACb,cAAe,OACf,cAAe,eACf,aAAa,MAEb,UAAW,CACP,MAAS,YAIjB,sBAAyB,CACrB,YAAa,OACb,cAAe,MACf,aAAc,UAGlB,oBAAuB,CACnB,YAAa,OACb,cAAe,S,0gBCxBvB,IAAMC,EAAmBb,IAAOc,QAAV,0FAAGd,CAAH,qCAAoBe,IAAaC,aAKjDC,EAAmBjB,IAAOM,GAAV,0FAAGN,CAAH,gBAAee,IAAaE,iBAC5Cf,IAAMC,MADU,KAKhBD,IAAME,OALU,MAShBc,EAAwBlB,IAAOmB,MAAV,+FAAGnB,CAAH,YAAkBe,IAAaK,sBACpDlB,IAAMC,MADe,MAKrBkB,EAAsBrB,IAAOsB,EAAV,6FAAGtB,CAAH,YAAce,IAAaQ,oBAC9CrB,IAAMC,MADa,MA4BVqB,IAtBK,SAAChB,GACjB,OACI,oCACCA,EAAMiB,SAASC,KAAI,WAAwCC,GAAxC,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,QAA5B,OAChB,kBAACjB,EAAD,CAAkBkB,IAAKJ,GACnB,kBAACV,EAAD,KACI,kBAAC,OAAD,CAAMe,GAAIJ,EAAYK,MAAOL,EAAYM,QAG7C,kBAAChB,EAAD,KACI,8BAAOU,EAAYO,KAAnB,MAA4BN,EAA5B,cAGJ,kBAAC,OAAD,CAAMG,GAAIJ,EAAYK,MAClB,kBAACZ,EAAD,KAAsBS,W,oCC9C1C,sHAQe,mBAACtB,GAEZ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK0B,MAAO1B,EAAM4B,YAAYC,MAC9B,kBAAC,IAAD,CAAY3B,YAAaF,EAAM4B,YAAYC,MAC3C,kBAAC,IAAD,CAAaZ,SAAUjB,EAAM8B,KAAKC,kBAAkBC,UAKzD,IAAMC,EAAK","file":"component---src-templates-tag-template-js-540afbd8584e54be6381.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport media from '../shared/mediaQueries';\n\nconst BannerHead = styled.h1`\n    margin:0;\n    font-size: 56px; \n    line-height: 1.1; \n    hyphens: normal; \n    font-weight: bold;\n\n    &::first-letter {\n        text-transform: uppercase;\n    }\n\n    ${media.phone`\n        font-size: 32px;\n    `}\n\n    ${media.tablet`\n        font-size: 40px;\n    `}\n`\n\nconst BannerHeadTwo = styled.h2`\n    margin-top: 1em;    \n    font-weight:bold; \n    margin: 24px 0; \n    font-size: 24px; \n    line-height: 1.3333333333;\n\n    ${media.phone`\n        font-size: 21px;\n    `}\n\n    ${media.tablet`\n        font-size: 22px;\n    `}\n`\n\nconst BannerText = (props) => (\n    <section className=\"container\">\n        <BannerHead>{ props.pageHeading }</BannerHead>\n        <BannerHeadTwo>{ props.pageInformation }</BannerHeadTwo>\n    </section>\n)\n\nexport default BannerText","const styles = {\n    'writingList': {\n        'margin-bottom': '32px',\n        'line-height': '1.5',\n        'margin-top': '64px',\n        'a': {\n            'text-decoration': 'none',\n            'touch-action': 'manipulation'\n        }\n    },\n\n    'WritingListTitle': {\n        'margin': 0,\n        'font-size': '36px',\n        'font-weight': 'bold',\n        'line-height': '1.3333333333',\n        'margin-top':'1em',\n\n        'a:hover': {\n            'color': '#4ec26e'\n        }\n    },\n\n    'writingListDatePosted': {\n        'font-size': '22px',\n        'line-height': '1.8',\n        'font-style': 'italic'\n    },\n\n    'writingListOverview': {\n        'font-size': '22px',\n        'line-height': '1.8'\n    }\n}\n\nexport default styles","import React from \"react\";\nimport { Link } from 'gatsby';\n\nimport shardedStyle from '../shared/style.js'\nimport styled from 'styled-components';\nimport media from '../shared/mediaQueries';\n\nconst WritingListStyle = styled.article`${shardedStyle.writingList}\n    &:first-child {\n        margin-top:0;\n    }\n`\nconst WritingListTitle = styled.h2`${shardedStyle.WritingListTitle}\n    ${media.phone`\n        font-size: 22px;\n    `}\n\n    ${media.tablet`\n        font-size: 28px;\n    `}\n`\nconst WritingListDatePosted = styled.aside`${shardedStyle.writingListDatePosted}\n    ${media.phone`\n        font-size: 16px;\n    `}\n`\nconst WritingListOverview = styled.p`${shardedStyle.writingListOverview}\n    ${media.phone`\n        font-size: 16px;\n    `}\n`\n\nconst WritingList = (props) => {\n    return (    \n        <>\n        {props.writings.map(({ frontmatter, timeToRead, excerpt } , index ) => (\n            <WritingListStyle key={index}>            \n                <WritingListTitle>\n                    <Link to={frontmatter.slug}>{frontmatter.title}</Link>\n                </WritingListTitle>\n                \n                <WritingListDatePosted>\n                    <time>{frontmatter.date} - {timeToRead} min read</time>\n                </WritingListDatePosted>\n            \n                <Link to={frontmatter.slug}>\n                    <WritingListOverview>{excerpt}</WritingListOverview>\n                </Link>\n            </WritingListStyle>\n        ))}\n        </>\n    )\n}\n\nexport default WritingList\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo'\n\nimport BannerText from '../components/banner';\nimport WritingList from '../components/writings/SinglewritingList'\n\nexport default (props) => {\n    \n    return (\n        <Layout>\n            <SEO title={props.pageContext.tag}/>\n            <BannerText pageHeading={props.pageContext.tag} />\n            <WritingList writings={props.data.allMarkdownRemark.nodes} />\n        </Layout>\n  );\n};\n\nexport const query = graphql`\n    query($tag: String!) {\n        sitePage {\n            path\n            context {\n                tag\n            }\n        }\n\n        allMarkdownRemark(\n            sort: {fields: frontmatter___date, order: DESC}, \n            filter: {frontmatter: {tags: {in: [$tag]}}}\n        ) {\n            nodes {\n                frontmatter {\n                    date(formatString: \"MMMM D, YYYY\")\n                    title\n                    slug\n                }\n                excerpt(pruneLength: 300)\n                timeToRead\n            }\n        }\n    }\n`\n"],"sourceRoot":""}